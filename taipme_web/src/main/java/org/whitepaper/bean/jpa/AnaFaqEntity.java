/*
 * Created on 17 mag 2018 ( Time 10:02:16 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.whitepaper.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Persistent class for entity stored in table "ana_faq"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="ana_faq", catalog="fogliobianco" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="AnaFaqEntity.countAll", query="SELECT COUNT(x) FROM AnaFaqEntity x" )
} )
public class AnaFaqEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id_faq", nullable=false)
    private Integer    idFaq        ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="DOM_FAQ", nullable=false, length=100)
    private String     domFaq       ;

    @Column(name="RIS_FAQ", length=5000)
    private String     risFaq       ;

    @Temporal(TemporalType.DATE)
    @Column(name="DAT_FAQ")
    private Date       datFaq       ;

	// "idStaFaq" (column "ID_STA_FAQ") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------        
    @Column(name="COD_STA_FAQ", nullable=false, length=10)
    private String codStaFaq;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public AnaFaqEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIdFaq( Integer idFaq ) {
        this.idFaq = idFaq ;
    }
    public Integer getIdFaq() {
        return this.idFaq;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : DOM_FAQ ( VARCHAR ) 
    public void setDomFaq( String domFaq ) {
        this.domFaq = domFaq;
    }
    public String getDomFaq() {
        return this.domFaq;
    }

    //--- DATABASE MAPPING : RIS_FAQ ( VARCHAR ) 
    public void setRisFaq( String risFaq ) {
        this.risFaq = risFaq;
    }
    public String getRisFaq() {
        return this.risFaq;
    }

    //--- DATABASE MAPPING : DAT_FAQ ( DATE ) 
    public void setDatFaq( Date datFaq ) {
        this.datFaq = datFaq;
    }
    public Date getDatFaq() {
        return this.datFaq;
    }




    public String getCodStaFaq() {
		return codStaFaq;
	}

	public void setCodStaFaq(String codStaFaq) {
		this.codStaFaq = codStaFaq;
	}

	//----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(idFaq);
        sb.append("]:"); 
        sb.append(domFaq);
        sb.append("|");
        sb.append(risFaq);
        sb.append("|");
        sb.append(datFaq);
        return sb.toString(); 
    } 

}
