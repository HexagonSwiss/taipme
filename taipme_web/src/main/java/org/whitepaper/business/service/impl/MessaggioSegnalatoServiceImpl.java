/*
 * Created on 19 gen 2023 ( Time 08:35:45 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.whitepaper.business.service.impl;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.whitepaper.bean.MessaggioSegnalato;
import org.whitepaper.bean.jpa.MessaggioSegnalatoEntity;
import org.whitepaper.business.service.MessaggioSegnalatoService;
import org.whitepaper.business.service.mapping.MessaggioSegnalatoServiceMapper;
import org.whitepaper.data.repository.jpa.MessaggioSegnalatoJpaRepository;

/**
 * Implementation of MessaggioSegnalatoService
 */
@Component
@Transactional
public class MessaggioSegnalatoServiceImpl implements MessaggioSegnalatoService {

	@Resource
	private MessaggioSegnalatoJpaRepository messaggioSegnalatoJpaRepository;

	@Resource
	private MessaggioSegnalatoServiceMapper messaggioSegnalatoServiceMapper;
	
	@Override
	public MessaggioSegnalato findById(Integer idMsgSegn) {
		MessaggioSegnalatoEntity messaggioSegnalatoEntity = messaggioSegnalatoJpaRepository.findOne(idMsgSegn);
		return messaggioSegnalatoServiceMapper.mapMessaggioSegnalatoEntityToMessaggioSegnalato(messaggioSegnalatoEntity);
	}

	@Override
	public List<MessaggioSegnalato> findAll() {
		Iterable<MessaggioSegnalatoEntity> entities = messaggioSegnalatoJpaRepository.findAll();
		List<MessaggioSegnalato> beans = new ArrayList<MessaggioSegnalato>();
		for(MessaggioSegnalatoEntity messaggioSegnalatoEntity : entities) {
			beans.add(messaggioSegnalatoServiceMapper.mapMessaggioSegnalatoEntityToMessaggioSegnalato(messaggioSegnalatoEntity));
		}
		return beans;
	}
	
	@Override
	public long coutAll() {
		long numRec = messaggioSegnalatoJpaRepository.count();		
		return numRec;
	}

	@Override
	public MessaggioSegnalato save(MessaggioSegnalato messaggioSegnalato) {
		return update(messaggioSegnalato) ;
	}

	@Override
	public MessaggioSegnalato create(MessaggioSegnalato messaggioSegnalato) {
		MessaggioSegnalatoEntity messaggioSegnalatoEntity = null;
		
		if ( null!=messaggioSegnalato.getIdMsgSegn() )
			messaggioSegnalatoEntity = messaggioSegnalatoJpaRepository.findOne(messaggioSegnalato.getIdMsgSegn());
		
		if( messaggioSegnalatoEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		messaggioSegnalatoEntity = new MessaggioSegnalatoEntity();
		messaggioSegnalatoServiceMapper.mapMessaggioSegnalatoToMessaggioSegnalatoEntity(messaggioSegnalato, messaggioSegnalatoEntity);
		messaggioSegnalatoEntity.setDatUltMov( Calendar.getInstance().getTime() );
		MessaggioSegnalatoEntity messaggioSegnalatoEntitySaved = messaggioSegnalatoJpaRepository.save(messaggioSegnalatoEntity);
		return messaggioSegnalatoServiceMapper.mapMessaggioSegnalatoEntityToMessaggioSegnalato(messaggioSegnalatoEntitySaved);
	}

	@Override
	public MessaggioSegnalato update(MessaggioSegnalato messaggioSegnalato) {
		MessaggioSegnalatoEntity messaggioSegnalatoEntity = messaggioSegnalatoJpaRepository.findOne(messaggioSegnalato.getIdMsgSegn());
		messaggioSegnalatoServiceMapper.mapMessaggioSegnalatoToMessaggioSegnalatoEntity(messaggioSegnalato, messaggioSegnalatoEntity);
		messaggioSegnalatoEntity.setDatUltMov( Calendar.getInstance().getTime() );
		MessaggioSegnalatoEntity messaggioSegnalatoEntitySaved = messaggioSegnalatoJpaRepository.save(messaggioSegnalatoEntity);
		return messaggioSegnalatoServiceMapper.mapMessaggioSegnalatoEntityToMessaggioSegnalato(messaggioSegnalatoEntitySaved);
	}

	@Override
	public void delete(Integer idMsgSegn) {
		messaggioSegnalatoJpaRepository.delete(idMsgSegn);
	}

	public MessaggioSegnalatoJpaRepository getMessaggioSegnalatoJpaRepository() {
		return messaggioSegnalatoJpaRepository;
	}

	public void setMessaggioSegnalatoJpaRepository(MessaggioSegnalatoJpaRepository messaggioSegnalatoJpaRepository) {
		this.messaggioSegnalatoJpaRepository = messaggioSegnalatoJpaRepository;
	}

	public MessaggioSegnalatoServiceMapper getMessaggioSegnalatoServiceMapper() {
		return messaggioSegnalatoServiceMapper;
	}

	public void setMessaggioSegnalatoServiceMapper(MessaggioSegnalatoServiceMapper messaggioSegnalatoServiceMapper) {
		this.messaggioSegnalatoServiceMapper = messaggioSegnalatoServiceMapper;
	}

	
}
