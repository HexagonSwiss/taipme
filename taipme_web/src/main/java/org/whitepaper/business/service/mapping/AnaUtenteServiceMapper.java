/*
 * Created on 2022-11-03 ( Time 15:15:46 )
 * Generated by Telosys Tools Generator ( version 3.1.2 )
 */
package org.whitepaper.business.service.mapping;

import org.whitepaper.bean.AnaUtente;
import org.whitepaper.bean.jpa.AnaUtenteEntity;
import org.whitepaper.bean.jpa.TipProfiloEntity;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.whitepaper.business.service.mapping.AbstractServiceMapper;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class AnaUtenteServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public AnaUtenteServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'AnaUtenteEntity' to 'AnaUtente'
	 * @param anaUtenteEntity
	 */
	public AnaUtente mapAnaUtenteEntityToAnaUtente(AnaUtenteEntity anaUtenteEntity) {
		if(anaUtenteEntity == null) {
			return null;
		}

		//--- Generic mapping 
		AnaUtente anaUtente = map(anaUtenteEntity, AnaUtente.class);

		//--- Link mapping ( link to TipProfilo )
		if(anaUtenteEntity.getTipProfilo() != null) {
			anaUtente.setCodTipPrf(anaUtenteEntity.getTipProfilo().getCodTipPrf());
			anaUtente.setDesTipPrf(anaUtenteEntity.getTipProfilo().getDesTipPrf());
		}
		return anaUtente;
	}
	
	/**
	 * Mapping from 'AnaUtente' to 'AnaUtenteEntity'
	 * @param anaUtente
	 * @param anaUtenteEntity
	 */
	public void mapAnaUtenteToAnaUtenteEntity(AnaUtente anaUtente, AnaUtenteEntity anaUtenteEntity) {
		if(anaUtente == null) {
			return;
		}

		//--- Generic mapping 
		map(anaUtente, anaUtenteEntity);

		//--- Link mapping ( link : anaUtente )
		if( hasLinkToTipProfilo(anaUtente) ) {
			TipProfiloEntity tipProfilo1 = new TipProfiloEntity();
			tipProfilo1.setCodTipPrf( anaUtente.getCodTipPrf() );
			anaUtenteEntity.setTipProfilo( tipProfilo1 );
		} else {
			anaUtenteEntity.setTipProfilo( null );
		}

	}
	
	/**
	 * Verify that TipProfilo id is valid.
	 * @param TipProfilo TipProfilo
	 * @return boolean
	 */
	private boolean hasLinkToTipProfilo(AnaUtente anaUtente) {
		if(anaUtente.getCodTipPrf() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}