/*
 * Created on 9 gen 2023 ( Time 14:26:24 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.whitepaper.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.whitepaper.bean.MessaggioAdmin;
import org.whitepaper.bean.jpa.MessaggioAdminEntity;
import org.whitepaper.business.service.MessaggioAdminService;
import org.whitepaper.business.service.mapping.MessaggioAdminServiceMapper;
import org.whitepaper.data.repository.jpa.MessaggioAdminJpaRepository;

/**
 * Implementation of MessaggioAdminService
 */
@Component
@Transactional
public class MessaggioAdminServiceImpl implements MessaggioAdminService {

	@Resource
	private MessaggioAdminJpaRepository messaggioAdminJpaRepository;

	@Resource
	private MessaggioAdminServiceMapper messaggioAdminServiceMapper;
	
	@Override
	public MessaggioAdmin findById(Integer idMsg) {
		MessaggioAdminEntity messaggioAdminEntity = messaggioAdminJpaRepository.findOne(idMsg);
		return messaggioAdminServiceMapper.mapMessaggioAdminEntityToMessaggioAdmin(messaggioAdminEntity);
	}

	@Override
	public List<MessaggioAdmin> findAll() {
		Iterable<MessaggioAdminEntity> entities = messaggioAdminJpaRepository.findAll();
		List<MessaggioAdmin> beans = new ArrayList<MessaggioAdmin>();
		for(MessaggioAdminEntity messaggioAdminEntity : entities) {
			beans.add(messaggioAdminServiceMapper.mapMessaggioAdminEntityToMessaggioAdmin(messaggioAdminEntity));
		}
		return beans;
	}

	@Override
	public MessaggioAdmin save(MessaggioAdmin messaggioAdmin) {
		return update(messaggioAdmin) ;
	}

	@Override
	public MessaggioAdmin create(MessaggioAdmin messaggioAdmin) {
		
		MessaggioAdminEntity messaggioAdminEntity = null;
		if ( null!=messaggioAdmin.getIdMsg() )
			messaggioAdminEntity = messaggioAdminJpaRepository.findOne(messaggioAdmin.getIdMsg());
		
		if( messaggioAdminEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		messaggioAdminEntity = new MessaggioAdminEntity();
		messaggioAdminServiceMapper.mapMessaggioAdminToMessaggioAdminEntity(messaggioAdmin, messaggioAdminEntity);
		MessaggioAdminEntity messaggioAdminEntitySaved = messaggioAdminJpaRepository.save(messaggioAdminEntity);
		return messaggioAdminServiceMapper.mapMessaggioAdminEntityToMessaggioAdmin(messaggioAdminEntitySaved);
	}

	@Override
	public MessaggioAdmin update(MessaggioAdmin messaggioAdmin) {
		MessaggioAdminEntity messaggioAdminEntity = messaggioAdminJpaRepository.findOne(messaggioAdmin.getIdMsg());
		messaggioAdminServiceMapper.mapMessaggioAdminToMessaggioAdminEntity(messaggioAdmin, messaggioAdminEntity);
		MessaggioAdminEntity messaggioAdminEntitySaved = messaggioAdminJpaRepository.save(messaggioAdminEntity);
		return messaggioAdminServiceMapper.mapMessaggioAdminEntityToMessaggioAdmin(messaggioAdminEntitySaved);
	}

	@Override
	public void delete(Integer idMsg) {
		messaggioAdminJpaRepository.delete(idMsg);
	}

	public MessaggioAdminJpaRepository getMessaggioAdminJpaRepository() {
		return messaggioAdminJpaRepository;
	}

	public void setMessaggioAdminJpaRepository(MessaggioAdminJpaRepository messaggioAdminJpaRepository) {
		this.messaggioAdminJpaRepository = messaggioAdminJpaRepository;
	}

	public MessaggioAdminServiceMapper getMessaggioAdminServiceMapper() {
		return messaggioAdminServiceMapper;
	}

	public void setMessaggioAdminServiceMapper(MessaggioAdminServiceMapper messaggioAdminServiceMapper) {
		this.messaggioAdminServiceMapper = messaggioAdminServiceMapper;
	}

}
