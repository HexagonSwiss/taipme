/*
 * Created on 2022-11-03 ( Time 15:15:46 )
 * Generated by Telosys Tools Generator ( version 3.1.2 )
 */
package org.whitepaper.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.whitepaper.bean.TipMessaggio;
import org.whitepaper.bean.jpa.TipMessaggioEntity;
import org.whitepaper.business.service.TipMessaggioService;
import org.whitepaper.business.service.mapping.TipMessaggioServiceMapper;
import org.whitepaper.data.repository.jpa.TipMessaggioJpaRepository;

/**
 * Implementation of TipMessaggioService
 */
@Component
@Transactional
public class TipMessaggioServiceImpl implements TipMessaggioService {

	@Resource
	private TipMessaggioJpaRepository tipMessaggioJpaRepository;

	@Resource
	private TipMessaggioServiceMapper tipMessaggioServiceMapper;
	
	@Override
	public TipMessaggio findById(String codTipMsg) {
		TipMessaggioEntity tipMessaggioEntity = tipMessaggioJpaRepository.findOne(codTipMsg);
		return tipMessaggioServiceMapper.mapTipMessaggioEntityToTipMessaggio(tipMessaggioEntity);
	}

	@Override
	public List<TipMessaggio> findAll() {
		Iterable<TipMessaggioEntity> entities = tipMessaggioJpaRepository.findAll();
		List<TipMessaggio> beans = new ArrayList<TipMessaggio>();
		for(TipMessaggioEntity tipMessaggioEntity : entities) {
			beans.add(tipMessaggioServiceMapper.mapTipMessaggioEntityToTipMessaggio(tipMessaggioEntity));
		}
		return beans;
	}

	@Override
	public TipMessaggio save(TipMessaggio tipMessaggio) {
		return update(tipMessaggio) ;
	}

	@Override
	public TipMessaggio create(TipMessaggio tipMessaggio) {
		TipMessaggioEntity tipMessaggioEntity = tipMessaggioJpaRepository.findOne(tipMessaggio.getCodTipMsg());
		if( tipMessaggioEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		tipMessaggioEntity = new TipMessaggioEntity();
		tipMessaggioServiceMapper.mapTipMessaggioToTipMessaggioEntity(tipMessaggio, tipMessaggioEntity);
		TipMessaggioEntity tipMessaggioEntitySaved = tipMessaggioJpaRepository.save(tipMessaggioEntity);
		return tipMessaggioServiceMapper.mapTipMessaggioEntityToTipMessaggio(tipMessaggioEntitySaved);
	}

	@Override
	public TipMessaggio update(TipMessaggio tipMessaggio) {
		TipMessaggioEntity tipMessaggioEntity = tipMessaggioJpaRepository.findOne(tipMessaggio.getCodTipMsg());
		tipMessaggioServiceMapper.mapTipMessaggioToTipMessaggioEntity(tipMessaggio, tipMessaggioEntity);
		TipMessaggioEntity tipMessaggioEntitySaved = tipMessaggioJpaRepository.save(tipMessaggioEntity);
		return tipMessaggioServiceMapper.mapTipMessaggioEntityToTipMessaggio(tipMessaggioEntitySaved);
	}

	@Override
	public void delete(String codTipMsg) {
		tipMessaggioJpaRepository.delete(codTipMsg);
	}

	public TipMessaggioJpaRepository getTipMessaggioJpaRepository() {
		return tipMessaggioJpaRepository;
	}

	public void setTipMessaggioJpaRepository(TipMessaggioJpaRepository tipMessaggioJpaRepository) {
		this.tipMessaggioJpaRepository = tipMessaggioJpaRepository;
	}

	public TipMessaggioServiceMapper getTipMessaggioServiceMapper() {
		return tipMessaggioServiceMapper;
	}

	public void setTipMessaggioServiceMapper(TipMessaggioServiceMapper tipMessaggioServiceMapper) {
		this.tipMessaggioServiceMapper = tipMessaggioServiceMapper;
	}

}
