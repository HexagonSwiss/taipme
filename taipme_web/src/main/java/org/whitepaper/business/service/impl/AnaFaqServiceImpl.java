/*
 * Created on 17 mag 2018 ( Time 10:03:00 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.whitepaper.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.whitepaper.bean.AnaFaq;
import org.whitepaper.bean.jpa.AnaFaqEntity;
import org.whitepaper.business.service.AnaFaqService;
import org.whitepaper.business.service.mapping.AnaFaqServiceMapper;
import org.whitepaper.data.repository.jpa.AnaFaqJpaRepository;

/**
 * Implementation of AnaFaqService
 */
@Component
@Transactional
public class AnaFaqServiceImpl implements AnaFaqService {

	@Resource
	private AnaFaqJpaRepository anaFaqJpaRepository;

	@Resource
	private AnaFaqServiceMapper anaFaqServiceMapper;
	
	@Override
	public AnaFaq findById(Integer idFaq) {
		AnaFaqEntity anaFaqEntity = anaFaqJpaRepository.findOne(idFaq);
		return anaFaqServiceMapper.mapAnaFaqEntityToAnaFaq(anaFaqEntity);
	}

	@Override
	public List<AnaFaq> findAll() {
		Iterable<AnaFaqEntity> entities = anaFaqJpaRepository.findAll();
		List<AnaFaq> beans = new ArrayList<AnaFaq>();
		for(AnaFaqEntity anaFaqEntity : entities) {
			beans.add(anaFaqServiceMapper.mapAnaFaqEntityToAnaFaq(anaFaqEntity));
		}
		return beans;
	}

	@Override
	public AnaFaq save(AnaFaq anaFaq) {
		return update(anaFaq) ;
	}

	@Override
	public AnaFaq create(AnaFaq anaFaq) {
		
		AnaFaqEntity anaFaqEntity = null;
		if (null!=anaFaq.getIdFaq() )
			anaFaqEntity = anaFaqJpaRepository.findOne(anaFaq.getIdFaq());
		if( anaFaqEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		anaFaqEntity = new AnaFaqEntity();
		anaFaqServiceMapper.mapAnaFaqToAnaFaqEntity(anaFaq, anaFaqEntity);
		AnaFaqEntity anaFaqEntitySaved = anaFaqJpaRepository.save(anaFaqEntity);
		return anaFaqServiceMapper.mapAnaFaqEntityToAnaFaq(anaFaqEntitySaved);
	}

	@Override
	public AnaFaq update(AnaFaq anaFaq) {
		AnaFaqEntity anaFaqEntity = anaFaqJpaRepository.findOne(anaFaq.getIdFaq());
		anaFaqServiceMapper.mapAnaFaqToAnaFaqEntity(anaFaq, anaFaqEntity);
		AnaFaqEntity anaFaqEntitySaved = anaFaqJpaRepository.save(anaFaqEntity);
		return anaFaqServiceMapper.mapAnaFaqEntityToAnaFaq(anaFaqEntitySaved);
	}

	@Override
	public void delete(Integer idFaq) {
		anaFaqJpaRepository.delete(idFaq);
	}

	public AnaFaqJpaRepository getAnaFaqJpaRepository() {
		return anaFaqJpaRepository;
	}

	public void setAnaFaqJpaRepository(AnaFaqJpaRepository anaFaqJpaRepository) {
		this.anaFaqJpaRepository = anaFaqJpaRepository;
	}

	public AnaFaqServiceMapper getAnaFaqServiceMapper() {
		return anaFaqServiceMapper;
	}

	public void setAnaFaqServiceMapper(AnaFaqServiceMapper anaFaqServiceMapper) {
		this.anaFaqServiceMapper = anaFaqServiceMapper;
	}

	//faq per stato
	public List<AnaFaq> loadFaqsPerStato(String codStaFaq) {
					
		List<AnaFaqEntity> entities = anaFaqJpaRepository.findByCodStaFaqOrderByIdFaq(codStaFaq);
		if ( null==entities )
			return null;
		
		List<AnaFaq> beans = new ArrayList<AnaFaq>();
		for(AnaFaqEntity anaFaqEntity : entities) {
			beans.add(anaFaqServiceMapper.mapAnaFaqEntityToAnaFaq(anaFaqEntity) );
		}
		
		return beans;
	}
}
