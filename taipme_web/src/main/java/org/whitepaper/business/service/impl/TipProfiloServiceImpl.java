/*
 * Created on 2022-11-03 ( Time 15:15:46 )
 * Generated by Telosys Tools Generator ( version 3.1.2 )
 */
package org.whitepaper.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.whitepaper.bean.TipProfilo;
import org.whitepaper.bean.jpa.TipProfiloEntity;
import org.whitepaper.business.service.TipProfiloService;
import org.whitepaper.business.service.mapping.TipProfiloServiceMapper;
import org.whitepaper.data.repository.jpa.TipProfiloJpaRepository;

/**
 * Implementation of TipProfiloService
 */
@Component
@Transactional
public class TipProfiloServiceImpl implements TipProfiloService {

	@Resource
	private TipProfiloJpaRepository tipProfiloJpaRepository;

	@Resource
	private TipProfiloServiceMapper tipProfiloServiceMapper;
	
	@Override
	public TipProfilo findById(String codTipPrf) {
		TipProfiloEntity tipProfiloEntity = tipProfiloJpaRepository.findOne(codTipPrf);
		return tipProfiloServiceMapper.mapTipProfiloEntityToTipProfilo(tipProfiloEntity);
	}

	@Override
	public List<TipProfilo> findAll() {
		Iterable<TipProfiloEntity> entities = tipProfiloJpaRepository.findAll();
		List<TipProfilo> beans = new ArrayList<TipProfilo>();
		for(TipProfiloEntity tipProfiloEntity : entities) {
			beans.add(tipProfiloServiceMapper.mapTipProfiloEntityToTipProfilo(tipProfiloEntity));
		}
		return beans;
	}

	@Override
	public TipProfilo save(TipProfilo tipProfilo) {
		return update(tipProfilo) ;
	}

	@Override
	public TipProfilo create(TipProfilo tipProfilo) {
		TipProfiloEntity tipProfiloEntity = tipProfiloJpaRepository.findOne(tipProfilo.getCodTipPrf());
		if( tipProfiloEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		tipProfiloEntity = new TipProfiloEntity();
		tipProfiloServiceMapper.mapTipProfiloToTipProfiloEntity(tipProfilo, tipProfiloEntity);
		TipProfiloEntity tipProfiloEntitySaved = tipProfiloJpaRepository.save(tipProfiloEntity);
		return tipProfiloServiceMapper.mapTipProfiloEntityToTipProfilo(tipProfiloEntitySaved);
	}

	@Override
	public TipProfilo update(TipProfilo tipProfilo) {
		TipProfiloEntity tipProfiloEntity = tipProfiloJpaRepository.findOne(tipProfilo.getCodTipPrf());
		tipProfiloServiceMapper.mapTipProfiloToTipProfiloEntity(tipProfilo, tipProfiloEntity);
		TipProfiloEntity tipProfiloEntitySaved = tipProfiloJpaRepository.save(tipProfiloEntity);
		return tipProfiloServiceMapper.mapTipProfiloEntityToTipProfilo(tipProfiloEntitySaved);
	}

	@Override
	public void delete(String codTipPrf) {
		tipProfiloJpaRepository.delete(codTipPrf);
	}

	public TipProfiloJpaRepository getTipProfiloJpaRepository() {
		return tipProfiloJpaRepository;
	}

	public void setTipProfiloJpaRepository(TipProfiloJpaRepository tipProfiloJpaRepository) {
		this.tipProfiloJpaRepository = tipProfiloJpaRepository;
	}

	public TipProfiloServiceMapper getTipProfiloServiceMapper() {
		return tipProfiloServiceMapper;
	}

	public void setTipProfiloServiceMapper(TipProfiloServiceMapper tipProfiloServiceMapper) {
		this.tipProfiloServiceMapper = tipProfiloServiceMapper;
	}

}
