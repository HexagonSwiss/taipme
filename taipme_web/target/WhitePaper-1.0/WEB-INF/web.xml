<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="to.be.defined" version="2.5">

	<display-name>WhitePaper</display-name>
	
	<!-- Spring IOC context -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:/META-INF/spring/applicationContext.xml 
			/WEB-INF/spring-security.xml
		</param-value>
	</context-param>
	<context-param>
	    <param-name>log4jExposeWebAppRoot</param-name>
	    <param-value>false</param-value>
	 </context-param>
	<context-param>
	    <param-name>webAppRootKey</param-name>
	    <param-value>whitepaper</param-value>
	</context-param>
    <listener>
  		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	 <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:/META-INF/log4j.properties</param-value>
    </context-param> 
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
 	<listener>
    	<listener-class>org.whitepaper.utility.SessionCounter</listener-class>
  	</listener>

	
	<!-- CORS Filter 
	<filter>
		<filter-name>CorsFilter</filter-name>
		<filter-class>org.whitepaper.rest.common.CORSFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CorsFilter</filter-name>
		<url-pattern>/rest/*</url-pattern>
	</filter-mapping>
  -->
	<!-- Spring MVC REST 
	<servlet>
		<servlet-name>dispatcher-rest</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>WEB-INF/spring-webmvc-rest.xml</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher-rest</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>
	-->
	<!-- Spring MVC -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>WEB-INF/spring-webmvc.xml</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- Encoding -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Supports of other HTTP methods than GET, POST : like PUT, DELETE -->
	<filter>
		<filter-name>HttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	
<!-- 	This filter binds the JPA EntityManager to the thread for the entire processing of the request -->
<!-- 	<filter> -->
<!-- 		<filter-name>Spring OpenEntityManagerInViewFilter</filter-name> -->
<!-- 		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class> -->
<!-- 	</filter> -->
<!-- 	<filter-mapping> -->
<!-- 		<filter-name>Spring OpenEntityManagerInViewFilter</filter-name> -->
<!-- 		<url-pattern>/*</url-pattern> -->
<!-- 	</filter-mapping> -->
	
    <session-config>
        <session-timeout>10</session-timeout>
    </session-config>
    
    <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <location>/uncaughtException</location>
    </error-page>
    
     
    <error-page>
        <error-code>400</error-code>
        <location>/page-404.html</location>
    </error-page>
     
    
    <error-page>
        <error-code>404</error-code>
        <location>/page-404.html</location>
    </error-page>
    
	<!-- Spring Security -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
	    <filter-name>springSecurityFilterChain</filter-name>
	    <url-pattern>/*</url-pattern>	     
	  </filter-mapping>

	    
	<filter>
		<filter-name>MDCLog4jFilter</filter-name>
		<filter-class>org.whitepaper.web.common.custom.MDCLog4jFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>MDCLog4jFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
    
    <!-- SSL   
    <security-constraint>
         <web-resource-collection>
             <web-resource-name>HTTPs Test</web-resource-name>
             <url-pattern>/*</url-pattern>
         </web-resource-collection>
         <user-data-constraint>
             <transport-guarantee>CONFIDENTIAL</transport-guarantee>
         </user-data-constraint>
    </security-constraint>    
      -->
     
      
</web-app>