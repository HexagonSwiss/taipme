/*
 * Created on 9 gen 2023 ( Time 14:26:24 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.whitepaper.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;
import org.whitepaper.bean.CatMessaggio;
import org.whitepaper.bean.jpa.CatMessaggioEntity;
import org.whitepaper.business.service.CatMessaggioService;
import org.whitepaper.business.service.mapping.CatMessaggioServiceMapper;
import org.whitepaper.data.repository.jpa.CatMessaggioJpaRepository;

/**
 * Implementation of CatMessaggioService
 */
@Component
@Transactional
public class CatMessaggioServiceImpl implements CatMessaggioService {

	@Resource
	private CatMessaggioJpaRepository catMessaggioJpaRepository;

	@Resource
	private CatMessaggioServiceMapper catMessaggioServiceMapper;
	
	@Override
	public CatMessaggio findById(String catMsg) {
		CatMessaggioEntity catMessaggioEntity = catMessaggioJpaRepository.findOne(catMsg);
		return catMessaggioServiceMapper.mapCatMessaggioEntityToCatMessaggio(catMessaggioEntity);
	}

	@Override
	public List<CatMessaggio> findAll() {
		Iterable<CatMessaggioEntity> entities = catMessaggioJpaRepository.findAll();
		List<CatMessaggio> beans = new ArrayList<CatMessaggio>();
		for(CatMessaggioEntity catMessaggioEntity : entities) {
			beans.add(catMessaggioServiceMapper.mapCatMessaggioEntityToCatMessaggio(catMessaggioEntity));
		}
		return beans;
	}

	@Override
	public CatMessaggio save(CatMessaggio catMessaggio) {
		return update(catMessaggio) ;
	}

	@Override
	public CatMessaggio create(CatMessaggio catMessaggio) {
		CatMessaggioEntity catMessaggioEntity = catMessaggioJpaRepository.findOne(catMessaggio.getCatMsg());
		if( catMessaggioEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		catMessaggioEntity = new CatMessaggioEntity();
		catMessaggioServiceMapper.mapCatMessaggioToCatMessaggioEntity(catMessaggio, catMessaggioEntity);
		CatMessaggioEntity catMessaggioEntitySaved = catMessaggioJpaRepository.save(catMessaggioEntity);
		return catMessaggioServiceMapper.mapCatMessaggioEntityToCatMessaggio(catMessaggioEntitySaved);
	}

	@Override
	public CatMessaggio update(CatMessaggio catMessaggio) {
		CatMessaggioEntity catMessaggioEntity = catMessaggioJpaRepository.findOne(catMessaggio.getCatMsg());
		catMessaggioServiceMapper.mapCatMessaggioToCatMessaggioEntity(catMessaggio, catMessaggioEntity);
		CatMessaggioEntity catMessaggioEntitySaved = catMessaggioJpaRepository.save(catMessaggioEntity);
		return catMessaggioServiceMapper.mapCatMessaggioEntityToCatMessaggio(catMessaggioEntitySaved);
	}

	@Override
	public void delete(String catMsg) {
		catMessaggioJpaRepository.delete(catMsg);
	}

	public CatMessaggioJpaRepository getCatMessaggioJpaRepository() {
		return catMessaggioJpaRepository;
	}

	public void setCatMessaggioJpaRepository(CatMessaggioJpaRepository catMessaggioJpaRepository) {
		this.catMessaggioJpaRepository = catMessaggioJpaRepository;
	}

	public CatMessaggioServiceMapper getCatMessaggioServiceMapper() {
		return catMessaggioServiceMapper;
	}

	public void setCatMessaggioServiceMapper(CatMessaggioServiceMapper catMessaggioServiceMapper) {
		this.catMessaggioServiceMapper = catMessaggioServiceMapper;
	}

}
