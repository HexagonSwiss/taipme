/*
 * Created on 13 lug 2017 ( Time 12:07:28 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.whitepaper.business.service.custom;

import java.util.Date;
import java.util.List;

import org.whitepaper.bean.Messaggio;
import org.whitepaper.data.repository.jpa.custom.AggregateMsgPerCatEntity;
import org.whitepaper.data.repository.jpa.custom.AggregateMsgPerDatPub;

public interface MessaggioCustomService { 

	//conta numero messaggi di autori diversi e senza risposta
	int countNumMessaggiAutDiversiPerTipoNoReply(Integer idUte, String codTipMsg);
	
	//conta numero messaggi per autore
	int countMsgByIdAutore(Integer idUteAut);
	
	//lettura casuale di un messaggio senza risposta (diverso da autore se stesso)
	Messaggio findMsgRandomNoReplyAutoreDiverso(Integer idUteAut, String codTipMsg);
	
	//lettura di tutti i messaggi per autore 
	List<Messaggio> findMsgByAutore(Integer idUteAut);
	
	//lettura messaggio per autore e foglio
	Messaggio findMsgByAutoreAndIdFoglio(Integer idUteAut, Integer idFoglio);
	
	//lettura messaggio per cpnversazione PRIVATA
	Messaggio findMsgPerConversazionePrivata(Integer idMsg, Integer idUteAut, Integer idUteReply, Integer idMsgReply);
	
	//inserimento messaggio	e relativi tags
	Messaggio insertMsgAndTags(Integer idUteAut, Integer idUteReply, String desMsg, String codTipMsg, Integer idFoglio, Integer idMsgReply, boolean isSaveTAgs); 
	
	//inserisci reply e aggiorna messaggio iniziale		
	Messaggio insertReplyMsg(Integer idMsg, Integer idAut, Integer idUteReply, String desMsg, Integer idFoglio);
	
	//strappo messaggio (update+delete)
	public boolean strappoMsg(Integer idUte, Integer idMsg, Integer idMsgReply);

	//aggiornamento codice tipo messaggio e lettura messaggio REPLY		
	Messaggio updateCodTipMsgAndFindMsgReply(Integer idMsg, String codTipMsg);
	
	//numero massimo di fogli utilizzati dall'utente
	int countNumFogliUtilizzati(Integer idUte);
	
	//numero di messaggi per tipo
	List<AggregateMsgPerCatEntity> countNumMsgPerTipo();
	
	//ricerca dei messaggi pubblici per hashtag e diversi da autore corrente 	
	List<Messaggio> findMsgPubByHashTagAndNotAutore(String hashtag, Integer idUteAut);
	

	//lettura messaggi per tipo messaggi
	List<Messaggio> findMsgPerCodTipMsg(String codTipMsg);
	
	List<AggregateMsgPerDatPub> countMsgPerDataPubAfterDataInput(Date dataIn);
}
